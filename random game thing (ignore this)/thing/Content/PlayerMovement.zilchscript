class PlayerMovement : ZilchComponent
{
    [Property] var Speed : Real = 5.0;
    [Property] var JumpSpeed : Real = 10.0;
    
    var OnGround : Boolean = false;
    
    function Initialize(init : CogInitializer)
    {
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
        Zero.Connect(this.Owner, Events.CollisionStarted, this.OnCollisionStarted);
    }

    function OnLogicUpdate(event : UpdateEvent)
    {
        var movement = Real3.Zero;
        var jumpMovement = Real3.Zero;
        
        if (Zero.Keyboard.KeyIsPressed(Keys.A) || Zero.Keyboard.KeyIsPressed(Keys.D))
            this.Owner.RigidBody.Velocity = Real3(Math.Lerp(this.Owner.RigidBody.Velocity.X, 0.0, 0.5), this.Owner.RigidBody.Velocity.YZ);
        
        if (Zero.Keyboard.KeyIsDown(Keys.A))
        {
            --movement.X;
            this.Owner.RigidBody.Velocity += Math.Normalize(movement) * event.Dt * this.Speed;
        }
        else if (Zero.Keyboard.KeyIsDown(Keys.D))
        {
            ++movement.X;
            this.Owner.RigidBody.Velocity += Math.Normalize(movement) * event.Dt * this.Speed;
        }
        else
            this.Owner.RigidBody.Velocity = Real3(Math.Lerp(this.Owner.RigidBody.Velocity.X, 0.0, 0.25), this.Owner.RigidBody.Velocity.YZ);
        
        if (Zero.Keyboard.KeyIsPressed(Keys.Space) && this.OnGround == true)
        {
            this.OnGround = false;
            ++jumpMovement.Y;
        }
        
        Console.WriteLine("`movement`");
        
        this.Owner.RigidBody.Velocity += jumpMovement * event.Dt * this.JumpSpeed;
    }

    function OnCollisionStarted(event : CollisionEvent)
    {
        if (event.OtherObject.Ground != null)
            this.OnGround = true;
    }
}
