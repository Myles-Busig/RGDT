class Recipe
{
    var RecipeContents : Array[Integer] = new Array[Integer]();
}

class Crafting : ZilchComponent
{
    var CurrentCraftingLayout : Array[Integer] = new Array[Integer]();
    
    var SelectedColor : Real4 = Real4(1.0, 1.0, 1.0, 1.0);
    var ColorAmounts : Array[Integer] = Array[Integer]();
    
    var TestThing1 : Recipe = new Recipe();
    var TestThing2 : Recipe = new Recipe();
    
    function Initialize(init : CogInitializer)
    {
        this.CreateRecipes();
        
        for (var i = 0; i < 4; ++i)
            this.ColorAmounts.Add(1000);
        
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
    }

    function OnLogicUpdate(event : UpdateEvent)
    {
        this.GetCraftingLayout();
        
        if (Zero.Keyboard.KeyIsPressed(Keys.Space))
            Console.WriteLine("Color Amounts: `this.ColorAmounts`");
        //Console.WriteLine("Selected Color: `this.SelectedColor`");
        
        //Console.WriteLine("TestThing1 Drawn: `this.CheckForRecipe("TestThing1")`");
        //Console.WriteLine("TestThing2 Drawn: `this.CheckForRecipe("TestThing2")`");
        
        if (this.CheckForRecipe("TestThing1"))
            this.Space.FindObjectByName("CraftingOutput").Sprite.VertexColor = Real4(1.0, 0.75, 0.0, 1.0);
        else if (this.CheckForRecipe("TestThing2"))
            this.Space.FindObjectByName("CraftingOutput").Sprite.VertexColor = Real4(0.0, 1.0, 0.75, 1.0);
        else
            this.Space.FindObjectByName("CraftingOutput").Sprite.VertexColor = Real4(1.0, 1.0, 1.0, 1.0);
    }
    
    function GetCraftingLayout()
    {
        this.CurrentCraftingLayout.Clear();
        
        for(var i = 0; i < 64; ++i)
            this.CurrentCraftingLayout.Add(this.Space.FindObjectByName("CraftingSlot`i + 1`").CraftingSlot.Data);
    }
    
    function CreateRecipes()
    {
        this.TestThing1.RecipeContents = new Array[Integer]()
        {
        0,1,0,1,0,1,0,1,
        0,1,0,1,0,1,0,1,
        0,1,0,1,0,1,0,1,
        0,1,0,1,0,1,0,1,
        0,1,0,1,0,1,0,1,
        0,1,0,1,0,1,0,1,
        0,1,0,1,0,1,0,1,
        0,1,0,1,0,1,0,1
        };
        
        this.TestThing2.RecipeContents = new Array[Integer]()
        {
        1,0,1,0,1,0,1,0,
        1,0,1,0,1,0,1,0,
        1,0,1,0,1,0,1,0,
        1,0,1,0,1,0,1,0,
        1,0,1,0,1,0,1,0,
        1,0,1,0,1,0,1,0,
        1,0,1,0,1,0,1,0,
        1,0,1,0,1,0,1,0
        };
    }
    
    function CheckForRecipe(itemName : String) : Boolean
    {
        if (itemName == "TestThing1")
        {
            if (this.CheckArrays(this.CurrentCraftingLayout, this.TestThing1.RecipeContents))
                return true;
            else
                return false;
        }
        else if (itemName == "TestThing2")
        {
            if (this.CheckArrays(this.CurrentCraftingLayout, this.TestThing2.RecipeContents))
                return true;
            else
                return false;
        }
        
        return false;
    }
    
    function CheckArrays(array1 : Array[Integer], array2 : Array[Integer]) : Boolean
    {
        if (array1.Count != array2.Count)
            return false;
        
        for (var i = 0; i < array1.Count; ++ i)
        {
            if (array1[i] != array2[i])
                return false;
        }
        
        return true;
    }
}
